groups:
  - name: appcompatcheck.alerts
    rules:
      # Application Health Alerts
      - alert: ApplicationDown
        expr: up{job="appcompatcheck"} == 0
        for: 1m
        labels:
          severity: critical
          service: appcompatcheck
        annotations:
          summary: "AppCompatCheck application is down"
          description: "AppCompatCheck application has been down for more than 1 minute. Instance: {{ $labels.instance }}"
          runbook_url: "https://wiki.company.com/runbooks/appcompatcheck-down"

      - alert: HighErrorRate
        expr: (rate(http_requests_total{job="appcompatcheck",status=~"5.."}[5m]) / rate(http_requests_total{job="appcompatcheck"}[5m])) * 100 > 5
        for: 5m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }}% for the last 5 minutes. Instance: {{ $labels.instance }}"

      - alert: HighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="appcompatcheck"}[5m])) > 2
        for: 5m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes. Instance: {{ $labels.instance }}"

      - alert: LowThroughput
        expr: rate(http_requests_total{job="appcompatcheck"}[5m]) < 1
        for: 10m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "Low request throughput"
          description: "Request rate is {{ $value }} req/sec for the last 5 minutes. Instance: {{ $labels.instance }}"

  - name: database.alerts
    rules:
      # Database Alerts
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          service: postgresql
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL database has been down for more than 1 minute."

      - alert: PostgreSQLHighConnections
        expr: (pg_stat_activity_count / pg_settings_max_connections) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL high connection usage"
          description: "PostgreSQL connection usage is {{ $value }}% of maximum connections."

      - alert: PostgreSQLLongRunningQueries
        expr: pg_stat_activity_max_tx_duration{datname!~"template.*"} > 300
        for: 2m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL long running queries"
          description: "PostgreSQL has queries running for more than 5 minutes on database {{ $labels.datname }}."

      - alert: PostgreSQLHighReplicationLag
        expr: (pg_stat_replication_replay_lag) > 60
        for: 5m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL high replication lag"
          description: "PostgreSQL replication lag is {{ $value }} seconds."

      - alert: PostgreSQLDiskSpaceHigh
        expr: (pg_database_size_bytes / (1024^3)) > 10
        for: 5m
        labels:
          severity: warning
          service: postgresql
        annotations:
          summary: "PostgreSQL database size is high"
          description: "PostgreSQL database {{ $labels.datname }} size is {{ $value }}GB."

  - name: redis.alerts
    rules:
      # Redis Alerts
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis is down"
          description: "Redis has been down for more than 1 minute."

      - alert: RedisMemoryHigh
        expr: (redis_memory_used_bytes / redis_config_maxmemory) * 100 > 90
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis memory usage is high"
          description: "Redis memory usage is {{ $value }}% of maximum memory."

      - alert: RedisConnectionsHigh
        expr: redis_connected_clients > 80
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis connection count is high"
          description: "Redis has {{ $value }} connected clients."

      - alert: RedisSlowQueries
        expr: increase(redis_slowlog_length[5m]) > 10
        for: 2m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis slow queries detected"
          description: "Redis has {{ $value }} slow queries in the last 5 minutes."

  - name: system.alerts
    rules:
      # System Resource Alerts
      - alert: HighCPUUsage
        expr: (100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value }}% for the last 5 minutes on {{ $labels.instance }}."

      - alert: HighMemoryUsage
        expr: ((node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value }}% on {{ $labels.instance }}."

      - alert: LowDiskSpace
        expr: ((node_filesystem_size_bytes - node_filesystem_free_bytes) / node_filesystem_size_bytes) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "Low disk space"
          description: "Disk usage is {{ $value }}% on {{ $labels.instance }} filesystem {{ $labels.mountpoint }}."

      - alert: HighDiskIOWait
        expr: irate(node_cpu_seconds_total{mode="iowait"}[5m]) * 100 > 20
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High disk I/O wait"
          description: "Disk I/O wait is {{ $value }}% on {{ $labels.instance }}."

  - name: kubernetes.alerts
    rules:
      # Kubernetes Alerts
      - alert: PodCrashLooping
        expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod is crash looping"
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping."

      - alert: PodNotReady
        expr: kube_pod_status_ready{condition="false"} == 1
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Pod not ready"
          description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been not ready for more than 5 minutes."

      - alert: DeploymentReplicasMismatch
        expr: kube_deployment_spec_replicas != kube_deployment_status_available_replicas
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "Deployment replicas mismatch"
          description: "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has {{ $labels.spec_replicas }} desired but {{ $labels.available_replicas }} available replicas."

      - alert: StatefulSetReplicasMismatch
        expr: kube_statefulset_status_replicas_ready != kube_statefulset_status_replicas
        for: 5m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "StatefulSet replicas mismatch"
          description: "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has {{ $labels.replicas }} desired but {{ $labels.replicas_ready }} ready replicas."

      - alert: PersistentVolumeClaimPending
        expr: kube_persistentvolumeclaim_status_phase{phase="Pending"} == 1
        for: 2m
        labels:
          severity: warning
          service: kubernetes
        annotations:
          summary: "PVC is pending"
          description: "PersistentVolumeClaim {{ $labels.namespace }}/{{ $labels.persistentvolumeclaim }} is pending."

  - name: business.alerts
    rules:
      # Business Logic Alerts
      - alert: HighFailedScans
        expr: (rate(scans_total{status="failed"}[10m]) / rate(scans_total[10m])) * 100 > 10
        for: 5m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "High failed scan rate"
          description: "Failed scan rate is {{ $value }}% over the last 10 minutes."

      - alert: LowScanThroughput
        expr: rate(scans_total[5m]) < 0.1
        for: 10m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "Low scan throughput"
          description: "Scan rate is {{ $value }} scans/sec over the last 5 minutes."

      - alert: FileProcessingBacklog
        expr: file_processing_queue_size > 100
        for: 5m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "File processing backlog"
          description: "File processing queue has {{ $value }} items waiting."

      - alert: NotificationDeliveryFailure
        expr: (rate(notifications_total{status="failed"}[10m]) / rate(notifications_total[10m])) * 100 > 5
        for: 5m
        labels:
          severity: warning
          service: appcompatcheck
        annotations:
          summary: "High notification delivery failure rate"
          description: "Notification delivery failure rate is {{ $value }}% over the last 10 minutes."

  - name: security.alerts
    rules:
      # Security Alerts
      - alert: HighFailedLogins
        expr: rate(login_attempts_total{status="failed"}[5m]) > 5
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High failed login attempts"
          description: "There are {{ $value }} failed login attempts per second over the last 5 minutes."

      - alert: UnauthorizedAPIAccess
        expr: rate(http_requests_total{status="401"}[5m]) > 2
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "High unauthorized API access attempts"
          description: "There are {{ $value }} unauthorized API access attempts per second over the last 5 minutes."

      - alert: RateLimitExceeded
        expr: rate(http_requests_total{status="429"}[5m]) > 1
        for: 2m
        labels:
          severity: warning
          service: security
        annotations:
          summary: "Rate limit frequently exceeded"
          description: "Rate limit is being exceeded {{ $value }} times per second over the last 5 minutes."