name: Test Vercel Build Compatibility

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  NODE_VERSION: '18'
  NPM_CONFIG_LEGACY_PEER_DEPS: 'true'

jobs:
  test-build:
    name: Test Build with React 18
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Verify .npmrc exists
        run: |
          if [ -f .npmrc ]; then
            echo "✅ .npmrc found"
            cat .npmrc
          else
            echo "❌ .npmrc not found"
            exit 1
          fi
      
      - name: Install dependencies with legacy-peer-deps
        run: npm install --legacy-peer-deps
      
      - name: Check React version
        run: |
          echo "Checking React version..."
          npm ls react react-dom || true
          echo "React version in package.json:"
          node -p "require('./package.json').dependencies.react"
      
      - name: Run dependency check script
        run: npm run check-deps
        continue-on-error: true
      
      - name: Run linter
        run: npm run lint
        continue-on-error: true
      
      - name: Run type check
        run: npm run type-check
      
      - name: Test build
        env:
          NEXT_TELEMETRY_DISABLED: '1'
        run: npm run build
      
      - name: Verify build output
        run: |
          if [ -d ".next" ]; then
            echo "✅ Build directory exists"
            ls -la .next/
          else
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi
      
      - name: Test start (production mode)
        run: |
          timeout 30s npm run start &
          sleep 20
          curl -f http://localhost:3000 || exit 1
          echo "✅ Production server started successfully"
      
      - name: Build summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Node Version: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- npm Version: $(npm --version)" >> $GITHUB_STEP_SUMMARY
          echo "- React Version: $(node -p "require('./package.json').dependencies.react")" >> $GITHUB_STEP_SUMMARY
          echo "- Build Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  dependency-audit:
    name: Audit Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true
      
      - name: Check for outdated packages
        run: npm outdated || true
      
      - name: List Radix UI versions
        run: |
          echo "Radix UI package versions:"
          npm ls @radix-ui/react-select @radix-ui/react-hover-card @radix-ui/react-popover || true

  vercel-preview:
    name: Vercel Preview Deployment
    runs-on: ubuntu-latest
    needs: [test-build]
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        if: secrets.VERCEL_TOKEN != ''
        continue-on-error: true
      
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        if: secrets.VERCEL_TOKEN != ''
        continue-on-error: true
      
      - name: Deploy Preview to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        if: secrets.VERCEL_TOKEN != ''
        continue-on-error: true
